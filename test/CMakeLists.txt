function(add_mpi_test name file no_mpi_proc)
  message(STATUS "Adding mpi test " ${name})
  add_executable(${name} ${file})
  target_compile_features(${name} PUBLIC cxx_std_11)
  target_include_directories(${name} PUBLIC ${test_header_dir})
  if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    get_target_property(FLGS ${name} LINK_FLAGS_DEBUG)
    if(FLGS STREQUAL "FLGS-NOTFOUND")
      SET(FLGS "") # set to empty string
    endif()
    SET(FLGS "${FLGS} ${GCC_COVERAGE_LINK_FLAGS}" )
    set_target_properties(${name} PROPERTIES LINK_FLAGS_DEBUG ${FLGS} )
  endif()
  set(test_parameters -np ${no_mpi_proc} ${name} ${ARGN})
  add_test(NAME ${name} COMMAND "mpirun" ${test_parameters} )
endfunction(add_mpi_test)

function(simple_test name file)
  message(STATUS "Adding test " ${name})
  add_executable(${name} ${file})
  target_compile_features(${name} PUBLIC cxx_std_11)
  add_test(NAME "${name}_test" COMMAND ${name})
endfunction(simple_test)

add_mpi_test(sparse sparse.cc 1)
target_link_libraries(sparse las)

add_mpi_test(dense dense.cc 1)
target_link_libraries(dense las)

if(CUDA_FOUND)
  message(STATUS "Adding CUDA test cases:")
  simple_test(cusparse cusparse.cc)
  target_link_libraries(cusparse las)
  target_include_directories(cusparse PUBLIC ${CUDA_INCLUDE_DIRS})
endif()

find_package(PETSc)
find_package(SCOREC REQUIRED COMPONENTS gmi_sim gmi apf ma)
if(PETSC_FOUND AND SCOREC_FOUND)
  set(FLAGS "-Rpass -DTEST_SINGLE")
  add_mpi_test(petsc_raw "petsc_hard.cc;petsc_virt.cc" 8)
  target_link_libraries(petsc_raw las SCOREC::gmi_sim SCOREC::gmi  SCOREC::apf SCOREC::ma ${PETSC_LIBRARIES})
  target_include_directories(petsc_raw PUBLIC ${PETSC_INCLUDE_DIRS} ${SCOREC_INCLUDE_DIRS})
  set_target_properties(petsc_raw PROPERTIES COMPILE_FLAGS "-DTEST_RAW ${FLAGS}")
  add_mpi_test(petsc_lasops "petsc_hard.cc;petsc_virt.cc" 8)
  target_link_libraries(petsc_lasops las SCOREC::gmi_sim SCOREC::gmi  SCOREC::apf SCOREC::ma ${PETSC_LIBRARIES})
  target_include_directories(petsc_lasops PUBLIC ${PETSC_INCLUDE_DIRS} ${SCOREC_INCLUDE_DIRS})
  set_target_properties(petsc_lasops PROPERTIES COMPILE_FLAGS "-DTEST_LASOPS ${FLAGS}")
  add_mpi_test(petsc_call "petsc_hard.cc;petsc_virt.cc" 8)
  target_link_libraries(petsc_call las SCOREC::gmi_sim SCOREC::gmi  SCOREC::apf SCOREC::ma ${PETSC_LIBRARIES})
  target_include_directories(petsc_call PUBLIC ${PETSC_INCLUDE_DIRS} ${SCOREC_INCLUDE_DIRS})
  set_target_properties(petsc_call PROPERTIES COMPILE_FLAGS "-DTEST_CALL ${FLAGS}")
  add_mpi_test(petsc_cvirt "petsc_hard.cc;petsc_virt.cc" 8)
  target_link_libraries(petsc_cvirt las SCOREC::gmi_sim SCOREC::gmi  SCOREC::apf SCOREC::ma ${PETSC_LIBRARIES})
  target_include_directories(petsc_cvirt PUBLIC ${PETSC_INCLUDE_DIRS} ${SCOREC_INCLUDE_DIRS})
  set_target_properties(petsc_cvirt PROPERTIES COMPILE_FLAGS "-DTEST_CVIRT ${FLAGS}")
  add_mpi_test(petsc_virtual "petsc_hard.cc;petsc_virt.cc" 8)
  target_link_libraries(petsc_virtual las SCOREC::gmi_sim SCOREC::gmi  SCOREC::apf SCOREC::ma ${PETSC_LIBRARIES})
  target_include_directories(petsc_virtual PUBLIC ${PETSC_INCLUDE_DIRS} ${SCOREC_INCLUDE_DIRS})
  set_target_properties(petsc_virtual PROPERTIES COMPILE_FLAGS "-DTEST_VIRTUAL ${FLAGS}")
endif()
